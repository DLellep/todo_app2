openapi: 3.0.2
info:
    title: todo-app2
    version: 1.0.0
paths:
    /tasks:
        summary: Path used to manage the list of tasks.
        description: >-
            The REST endpoint/path used to list and create zero or more `task` entities.  This path contains a
            `GET` and `POST` operation to perform the list and create tasks, respectively.
        get:
            tags:
                - /tasks
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/task'
                            examples:
                                tasks:
                                    value:
                                        -
                                            name: Task 1
                                            dueDate: '2021-02-12 11:22:33'
                                            description: Description for task 1
                    description: Successful response - returns an array of `task` entities.
                '401':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Invalid session:
                                    value:
                                        error: Invalid session
                                Invalid user:
                                    value:
                                        error: Invalid user
                                Missing authorization header:
                                    value:
                                        error: Missing authorization header
                                Authorization header must start with Bearer followed by a space and the token:
                                    value:
                                        error: >-
                                            Authorization header must start with Bearer followed by a space
                                            and the token
                    description: Unauthorized.
            security:
                -
                    Bearer: []
            operationId: gettasks
            summary: List All tasks
            description: Gets a list of all `task` entities.
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/task'
            tags:
                - /tasks
            responses:
                '201':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/task'
                            examples:
                                task:
                                    value:
                                        name: Task 1
                                        dueDate: '2021-02-12 11:22:33'
                                        description: Description for task 1
                    description: Successful response - creates a new `task` entity and adds it to `tasks` array.
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Missing params:
                                    value:
                                        error: One or all params are missing
                    description: Bad Request.
                '401':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                'Unauthorized: username or password is incorrect':
                                    value:
                                        error: 'Unauthorized: username or password is incorrect.'
                    description: 'Unauthorized: username or password is incorrect.'
            security:
                -
                    Bearer: []
            operationId: createtask
            summary: Create A Task
            description: Creates a new `task` entity.
    /sessions:
        summary: Path used to manage the list of sessions.
        description: >-
            The REST endpoint/path used to list and create zero or more `session` entities.  This path
            contains a `GET` and `POST` operation to perform the list and create tasks, respectively.
        post:
            requestBody:
                description: A new `session` to be created.
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/session'
                        examples:
                            session:
                                value:
                                    username: admin
                                    password: password
                required: true
            tags:
                - /sessions
            responses:
                '201':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/session'
                            examples:
                                session:
                                    value:
                                        sessionToken: tpk4wvs1pj5dut0lf85p3
                                        isAdmin: true
                    description: Successful response.
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Invalid JSON:
                                    value:
                                        error: Unexpected token in JSON at position 0
                                One or all params are missing:
                                    value:
                                        error: One or all params are missing
                    description: Bad Request
                '401':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                'Unauthorized: username or password is incorrect':
                                    value:
                                        error: 'Unauthorized: username or password is incorrect'
                    description: Unauthorized
            operationId: createsession
            summary: Create a session
            description: Creates a new instance of a `session`.
        delete:
            tags:
                - /sessions
            responses:
                '204':
                    content:
                        application/json: {}
                    description: '`Session` successfully deleted.'
                '401':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Invalid session:
                                    value:
                                        error: Invalid session
                                Invalid user:
                                    value:
                                        error: Invalid user
                                Missing authorization header:
                                    value:
                                        error: Missing authorization header
                                Authorization header must start with Bearer followed by a space and the token:
                                    value:
                                        error: >-
                                            Authorization header must start with Bearer followed by a space
                                            and the token
                    description: Unauthorized.
            security:
                -
                    Bearer: []
            operationId: deletesession
            summary: Delete a session
            description: Deletes a new instance of a `session`.
components:
    schemas:
        session:
            title: Root Type for session
            description: ''
            type: object
            properties:
                username:
                    type: string
                password:
                    type: string
            example:
                username: admin
                password: password
        error:
            title: Root Type for error
            description: ''
            type: object
            properties:
                error:
                    type: string
            example:
                error: 'Unauthorized: username or password is incorrect'
        task:
            title: Root Type for task
            description: ''
            type: object
            properties:
                id:
                    format: int32
                    type: integer
                name:
                    type: string
                dueDate:
                    format: date-time
                    type: string
                description:
                    type: string
                userId:
                    format: int32
                    type: integer
            example:
                name: Task 1
                dueDate: '2021-02-12 11:22:33'
                description: Description for task 1
    securitySchemes:
        Bearer:
            scheme: bearer
            type: http
tags:
    -
        name: /sessions
        description: ''
    -
        name: /tasks
        description: ''
